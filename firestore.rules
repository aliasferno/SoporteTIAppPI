rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Funci칩n auxiliar para verificar si el usuario est치 autenticado
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Funci칩n para verificar si el usuario es el creador del documento
    function isOwner(resource) {
      return resource.data.createdBy == request.auth.uid;
    }
    
    // Reglas para la colecci칩n de tickets
    match /tickets/{ticketId} {
      // Permitir lectura a cualquier usuario autenticado
      allow read: if isAuthenticated();
      
      // Permitir crear tickets a usuarios autenticados
      allow create: if isAuthenticated() 
        && request.resource.data.createdBy == request.auth.uid
        && request.resource.data.createdAt is timestamp
        && request.resource.data.updatedAt is timestamp;
      
      // Permitir actualizar tickets al creador o a usuarios asignados
      allow update: if isAuthenticated() 
        && (isOwner(resource) || resource.data.assignedTo == request.auth.uid)
        && request.resource.data.createdBy == resource.data.createdBy
        && request.resource.data.updatedAt is timestamp;
      
      // Permitir eliminar tickets solo al creador
      allow delete: if isAuthenticated() && isOwner(resource);
      
      // Reglas para los comentarios dentro de un ticket
      match /comments/{commentId} {
        allow read: if isAuthenticated();
        allow create: if isAuthenticated() 
          && request.resource.data.authorId == request.auth.uid
          && request.resource.data.createdAt is timestamp;
        allow update, delete: if false; // No permitir actualizar o eliminar comentarios
      }
    }
  }
} 